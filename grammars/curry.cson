'scopeName': 'source.curry'
'name': 'Curry'
'fileTypes': [
  'curry'
]
'patterns': [
  {
    'include': '#curry_source'
  }
]
'repository':
  'assignment_operator':
    'name': 'keyword.operator.assignment.curry'
    'match': '='
  'attribute_name':
    'name': 'entity.other.attribute-name.curry'
    'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
  'block_comment':
    'name': 'comment.block.curry'
    'begin': '\\{-'
    'end': '-\\}'
    'applyEndPatternLast': 1
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.comment.block.start.curry'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.comment.block.end.curry'
    'patterns': [
      {
        'include': '#block_comment'
      }
    ]
  'comma':
    'name': 'punctuation.separator.comma.curry'
    'match': ','
  'comment':
    'patterns': [
      {
        'name': 'comment.block.currydoc.curry'
        'begin': '^(?=---(?:\\s|\\n))'
        'end': '(?!\\G)'
        'patterns': [
          {
            'name': 'comment.line.triple-dash.currydoc.curry'
            'begin': '(---)(?=\\s|\\n)'
            'end': '\\n'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.comment.currydoc.curry'
            'patterns': [
              {
                'name': 'keyword.other.documentation.currydoc.curry'
                'match': '@(?:author|category|return|version)\\b'
              }
              {
                'match': '(@cons)\\s+(\\S+)'
                'captures':
                  '1':
                    'name': 'keyword.other.documentation.currydoc.curry'
                  '2':
                    'name': 'entity.name.tag.curry'
              }
              {
                'match': '(@field)\\s+(\\S+)'
                'captures':
                  '1':
                    'name': 'keyword.other.documentation.currydoc.curry'
                  '2':
                    'name': 'entity.other.attribute-name.curry'
              }
              {
                'match': '(@param)\\s+(\\S+)'
                'captures':
                  '1':
                    'name': 'keyword.other.documentation.currydoc.curry'
                  '2':
                    'name': 'variable.parameter.curry'
              }
            ]
          }
        ]
      }
      {
        'begin': '(?:^[\\s\\t]+)?(?=--+(?!(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))))'
        'end': '(?!\\G)'
        'patterns': [
          {
            'name': 'comment.line.double-dash.curry'
            'begin': '--'
            'end': '\\n'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.curry'
          }
        ]
      }
      {
        'include': '#block_comment'
      }
    ]
  'curry_expression':
    'patterns': [
      {
        'include': '#infix_function'
      }
      {
        'include': '#unit'
      }
      {
        'include': '#empty_list'
      }
      {
        'include': '#keyword'
      }
      {
        'include': '#pragma'
      }
      {
        'include': '#string'
      }
      {
        'include': '#quoted_character'
      }
      {
        'include': '#comment'
      }
      {
        'include': '#infix_operator'
      }
      {
        'include': '#comma'
      }
      {
        'include': '#numeric_literal'
      }
      {
        'include': '#operator'
      }
      {
        'include': '#identifier'
      }
      {
        'include': '#type_ctor'
      }
    ]
  'curry_preprocessor':
    'name': 'meta.preprocessor.curry'
    'begin': '``+(?=format|printf|regex|html|xml|sql)'
    'end': '\'\'+'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.curry'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.curry'
  'curry_source':
    'patterns': [
      {
        'include': '#module_declaration'
      }
      {
        'include': '#curry_toplevel'
      }
    ]
  'curry_toplevel':
    'patterns': [
      {
        'include': '#import'
      }
      {
        'include': '#data_declaration'
      }
      {
        'include': '#type_alias'
      }
      {
        'include': '#curry_preprocessor'
      }
      {
        'include': '#function_type_declaration'
      }
      {
        'include': '#curry_expression'
      }
    ]
  'data_declaration':
    'name': 'meta.declaration.type.data.curry'
    'begin': '^([\\s\\t]*)(data|newtype)\\s+((?:(?!=|where).)*)'
    'end': '^(?!\\1[\\s\\t]|[\\s\\t]*$)'
    'beginCaptures':
      '2':
        'name': 'keyword.other.$2.curry'
      '3':
        'name': 'meta.type-signature.curry'
        'patterns': [
          {
            'include': '#type_signature'
          }
        ]
    'patterns': [
      {
        'include': '#comment'
      }
      {
        'include': '#assignment_operator'
      }
      {
        'match': '(?:(?:(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))([\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*)\\s*)(?:((?:(?!deriving)(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*|(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*|(?:(?!deriving)(?:[\\w()\'→⇒\\[\\],]|->|=>)+\\s*)+))(?:(?:\\s+)(?:(?!deriving)(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*|(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*|(?:(?!deriving)(?:[\\w()\'→⇒\\[\\],]|->|=>)+\\s*)+)))*)?))'
        'captures':
          '1':
            'patterns': [
              {
                'include': '#type_ctor'
              }
            ]
          '2':
            'name': 'meta.type-signature.curry'
            'patterns': [
              {
                'include': '#type_signature'
              }
            ]
      }
      {
        'name': 'punctuation.separator.pipe.curry'
        'match': '\\|'
      }
      {
        'name': 'meta.declaration.type.data.record.block.curry'
        'begin': '\\{'
        'end': '\\}'
        'beginCaptures':
          '0':
            'name': 'keyword.operator.record.begin.curry'
        'endCaptures':
          '0':
            'name': 'keyword.operator.record.end.curry'
        'patterns': [
          {
            'include': '#comment'
          }
          {
            'include': '#comma'
          }
          {
            'include': '#record_field_declaration'
          }
        ]
      }
    ]
  'empty_list':
    'name': 'constant.language.empty-list.curry'
    'match': '\\[\\]'
  'escaped_character':
    'patterns': [
      {
        'name': 'constant.character.escape.curry'
        'match': '\\\\(?:NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\\\\"\'\\&])'
      }
      {
        'name': 'constant.character.escape.octal.curry'
        'match': '\\\\o[0-7]+'
      }
      {
        'name': 'constant.character.escape.hexadecimal.curry'
        'match': '\\\\x[0-9A-Fa-f]+'
      }
      {
        'name': 'constant.character.escape.control.curry'
        'match': '\\\\\\^[A-Z@\\[\\]\\\\^_]'
      }
    ]
  'function_name':
    'name': 'entity.name.function.curry'
    'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
  'function_type_declaration':
    'name': 'meta.function.type-declaration.curry'
    'begin': '^([\\s\\t]*)(?:(?:((?:(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*|(?:\\((?!--+\\))(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))+\\)))(?:(?:\\s*,\\s*)(?:(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*|(?:\\((?!--+\\))(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))+\\))))*))(?:\\s*((?<!(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\'])))(?:::|∷)(?!(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))))))'
    'end': '^(?!\\1[\\s\\t]|[\\s\\t]*$)'
    'contentName': 'meta.type-signature.curry'
    'beginCaptures':
      '2':
        'patterns': [
          {
            'include': '#function_name'
          }
          {
            'include': '#infix_operator'
          }
        ]
      '3':
        'name': 'keyword.other.double-colon.curry'
    'patterns': [
      {
        'include': '#type_signature'
      }
    ]
  'identifier':
    'name': 'identifier.curry'
    'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
    'captures':
      '0':
        'patterns': [
          {
            'include': '#module_name_prefix'
          }
          {
            'name': 'support.function.prelude.$1.curry'
            'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))(all|and|any|anyOf|appendFile|apply|break|catch|chr|compare|concat|concatMap|cond|const|curry|div|divMod|done|doSolve|drop|dropWhile|either|elem|ensureNotFree|ensureSpine|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|failed|filter|flip|foldIO|foldl|foldl1|foldr|foldr1|forIO|forIO_|fst|getChar|getLine|groundNormalForm|head|id|if_then_else|ioError|iterate|length|liftIO|lines|lookup|map|mapIO|mapIO_|max|maybe|min|mod|negate|negateFloat|negateForm|not|notElem|null|or|ord|otherwise|prim_appendFile|prim_chr|prim_error|prim_ioError|prim_ord|prim_putChar|prim_readFile|prim_show|prim_writeFile|print|putChar|putStr|putStrLn|PEVAL|quot|quotRem|readFile|rem|repeat|replicate|return|reverse|seq|sequenceIO|sequenceIO_|show|showError|snd|solve|span|splitAt|success|tail|take|takeWhile|uncurry|unknown|unless|unlines|until|unwords|unzip|unzip3|userError|when|words|writeFile|zip|zip3|zipWith|zipWith3)(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
          }
        ]
  'import':
    'name': 'meta.import.curry'
    'begin': '^([\\s\\t]*)(import)(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
    'end': '^(?!\\1[\\s\\t]|[\\s\\t]*$)'
    'beginCaptures':
      '2':
        'name': 'keyword.other.import.curry'
    'patterns': [
      {
        'include': '#module_name'
      }
      {
        'include': '#module_exports'
      }
      {
        'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))(qualified|as|hiding)(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
        'captures':
          '1':
            'name': 'keyword.other.$1.curry'
      }
      {
        'include': '#comment'
      }
    ]
  'infix_function':
    'name': 'keyword.operator.function.infix.curry'
    'match': '(`)(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(`)'
    'captures':
      '1':
        'name': 'punctuation.definition.entity.curry'
      '2':
        'name': 'punctuation.definition.entity.curry'
  'infix_operator':
    'name': 'entity.name.function.infix.curry'
    'match': '(?:\\((?!--+\\))(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))+\\))'
  'invalid':
    'name': 'invalid.illegal.character-not-allowed-here.curry'
    'match': '\\S+'
  'keyword':
    'patterns': [
      {
        'name': 'keyword.other.$1.curry'
        'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))(where|data|type|newtype|external|free)(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
      }
      {
        'name': 'keyword.operator.curry'
        'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))infix[lr]?(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
      }
      {
        'name': 'keyword.control.curry'
        'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))(?:do|if|then|else|case|fcase|of|let|in)(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
      }
    ]
  'module_declaration':
    'name': 'meta.declaration.module.curry'
    'begin': '^([\\s\\t]*)(module)(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
    'end': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))(where)(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))|^(?!\\1[\\s\\t]|[\\s\\t]*$)'
    'beginCaptures':
      '2':
        'name': 'keyword.other.module.curry'
    'endCaptures':
      '1':
        'name': 'keyword.other.where.curry'
    'patterns': [
      {
        'include': '#comment'
      }
      {
        'include': '#module_name'
      }
      {
        'include': '#module_exports'
      }
      {
        'include': '#invalid'
      }
    ]
  'module_exports':
    'patterns': [
      {
        'name': 'meta.declaration.exports.curry'
        'begin': '\\('
        'end': '\\)'
        'applyEndPatternLast': 1
        'patterns': [
          {
            'include': '#comment'
          }
          {
            'include': '#function_name'
          }
          {
            'include': '#type_name'
          }
          {
            'include': '#comma'
          }
          {
            'name': 'meta.other.constructor-list.curry'
            'begin': '(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))\\s*\\('
            'end': '\\)'
            'patterns': [
              {
                'include': '#type_ctor'
              }
              {
                'include': '#attribute_name'
              }
              {
                'include': '#comma'
              }
              {
                'match': '\\.\\.'
                'name': 'keyword.operator.wildcard.curry'
              }
            ]
          }
          {
            'include': '#infix_operator'
          }
        ]
      }
    ]
  'module_name':
    'name': 'support.other.module.curry'
    'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
  'module_name_prefix':
    'name': 'support.other.module.curry'
    'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.'
  'numeric_literal':
    'patterns': [
      {
        'name': 'constant.numeric.hexadecimal.curry'
        'match': '0[xX][0-9a-fA-F]+'
      }
      {
        'name': 'constant.numeric.octal.curry'
        'match': '0[oO][0-7]+'
      }
      {
        'name': 'constant.numeric.float.curry'
        'match': '[0-9]+(?:\\.[0-9]+[eE][+-]?|\\.|[eE][+-]?)[0-9]+'
      }
      {
        'name': 'constant.numeric.decimal.curry'
        'match': '[0-9]+'
      }
    ]
  'operator':
    'name': 'keyword.operator.curry'
    'match': '(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))+'
  'pragma':
    'name': 'meta.preprocessor.curry'
    'begin': '\\{-#'
    'end': '#-\\}'
    'patterns': [
      {
        'name': 'keyword.other.preprocessor.curry'
        'match': '(?<=\\s)[A-Z_]+(?=\\s)'
      }
    ]
  'quoted_character':
    'name': 'string.quoted.single.curry'
    'match': '(\')((?:[\\ -\\[\\]-~]|\\\\(?:NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\\\\"\'\\&])|(?:\\\\o[0-7]+)|(?:\\\\x[0-9A-Fa-f]+)|(?:\\\\\\^[A-Z@\\[\\]\\\\^_])|(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))))(\')'
    'captures':
      '1':
        'name': 'punctuation.definition.string.begin.curry'
      '2':
        'patterns': [
          {
            'include': '#escaped_character'
          }
        ]
      '3':
        'name': 'punctuation.definition.string.end.curry'
  'record_field_declaration':
    'name': 'meta.record-field.type-declaration.curry'
    'begin': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))(?:(?:((?:(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*|(?:\\((?!--+\\))(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))+\\)))(?:(?:\\s*,\\s*)(?:(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*|(?:\\((?!--+\\))(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))+\\))))*))(?:\\s*((?<!(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\'])))(?:::|∷)(?!(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))))))'
    'end': '(?=(?:(?:((?:(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*|(?:\\((?!--+\\))(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))+\\)))(?:(?:\\s*,\\s*)(?:(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*|(?:\\((?!--+\\))(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))+\\))))*))(?:\\s*((?<!(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\'])))(?:::|∷)(?!(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\']))))))|})'
    'contentName': 'meta.type-signature.curry'
    'beginCaptures':
      '1':
        'patterns': [
          {
            'include': '#attribute_name'
          }
          {
            'include': '#infix_operator'
          }
        ]
      '2':
        'name': 'keyword.other.double-colon.curry'
    'patterns': [
      {
        'include': '#type_signature'
      }
    ]
  'string':
    'name': 'string.quoted.double.curry'
    'begin': '"'
    'end': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.curry'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.curry'
    'patterns': [
      {
        'include': '#escaped_character'
      }
    ]
  'type_alias':
    'name': 'meta.declaration.type.curry'
    'begin': '^([\\s\\t]*)(type)(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
    'end': '^(?!\\1[\\s\\t]|[\\s\\t]*$)'
    'contentName': 'meta.type-signature.curry'
    'beginCaptures':
      '2':
        'name': 'keyword.other.type.curry'
    'patterns': [
      {
        'include': '#comment'
      }
      {
        'include': '#assignment_operator'
      }
      {
        'include': '#type_signature'
      }
    ]
  'type_ctor':
    'name': 'entity.name.tag.curry'
    'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
    'captures':
      '0':
        'patterns': [
          {
            'include': '#module_name_prefix'
          }
          {
            'name': 'support.tag.prelude.$1.curry'
            'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))(LT|EQ|GT|Left|Right|Nothing|Just|True|False|IOError|UserError|FailError|NondetError)(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
          }
        ]
  'type_name':
    'name': 'entity.name.type.curry'
    'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
    'captures':
      '0':
        'patterns': [
          {
            'include': '#module_name_prefix'
          }
          {
            'name': 'support.class.prelude.$1.curry'
            'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))(Either|IO|IOError|Int|Maybe|Ordering|String|Bool|Char|Float|DET|Success)(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
          }
        ]
  'type_signature':
    'patterns': [
      {
        'include': '#comment'
      }
      {
        'include': '#unit'
      }
      {
        'include': '#empty_list'
      }
      {
        'include': '#string'
      }
      {
        'name': 'keyword.other.arrow.curry'
        'match': '(?<!(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\'])))(?:->|→)(?!(?:[\\p{S}\\p{P}](?<![(),;\\[\\]`{}_"\'])))'
      }
      {
        'include': '#operator'
      }
      {
        'name': 'variable.other.generic-type.curry'
        'match': '(?:(?=[\\p{Ll}_\\p{Lu}\\p{Lt}])(?<![\\p{Ll}_\\p{Lu}\\p{Lt}\']))(?:[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:\\.[\\p{Lu}\\p{Lt}][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*)*\\.)?[\\p{Ll}_][\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']*(?:(?<=[\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\'])(?![\\p{Ll}_\\p{Lu}\\p{Lt}\\p{Nd}\']))'
      }
      {
        'include': '#type_name'
      }
    ]
  'unit':
    'name': 'constant.language.unit.curry'
    'match': '\\(\\)'